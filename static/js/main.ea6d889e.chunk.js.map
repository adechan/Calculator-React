{"version":3,"sources":["Components/Calculator/Display.js","Components/Calculator/Button.js","Components/Calculator/Buttons.js","App.js","index.js"],"names":["Display","displayValue","Container","styled","div","Value","h3","Button","value","width","setDisplayValue","operation","setOperation","next","setNext","previous","setPrevious","backgroundColour","textColour","widthButton","Number","isInteger","parseInt","button","onClick","buttonPressed","console","log","String","indexOf","parseFloat","result","number1","number2","Calculate","Buttons","Div","App","useState","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea6d889e.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from '@emotion/styled';\r\n\r\nconst Display = ({displayValue}) => {\r\n\r\n    const Container = styled.div`\r\n        margin: 0 auto;\r\n        background: rgb(133, 134, 148);\r\n        height: 15vh;\r\n        text-align: right;\r\n        justify-content: space-around;\r\n\r\n    `\r\n    const Value = styled.h3`\r\n        font-family: 'Sans Sans', sans-serif;\r\n        font-size: 12vh;\r\n        font-weight: normal;\r\n        padding: 0px;\r\n        padding-right: 3vh;\r\n        margin: 0px;\r\n        padding-top: 1vh;\r\n    `\r\n\r\n    return (  \r\n        <Container> \r\n            <Value> {displayValue} </Value>\r\n        </Container>\r\n    );\r\n}\r\n \r\nexport default Display;","import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport { jsx, css } from '@emotion/core';\r\n\r\n\r\nconst Button = ({value, width, setDisplayValue, displayValue, operation, setOperation, next, setNext, previous, setPrevious}) => {\r\n//\r\n    let backgroundColour = null;\r\n    let textColour = null;\r\n    let widthButton = null;\r\n\r\n    // grey buttons\r\n    if (Number.isInteger(parseInt(value)) === true)  \r\n    {\r\n        backgroundColour = `rgb(224, 224, 224)`;\r\n        textColour = `black`;\r\n    }\r\n    // orange buttons\r\n    else if (Number.isInteger(parseInt(value)) === false && value !== '.') \r\n    {\r\n        backgroundColour = `rgb(245, 146, 62)`;\r\n        textColour = `white`;\r\n    }\r\n    else if (value === '.')\r\n    {\r\n        backgroundColour = `rgb(224, 224, 224)`;\r\n        textColour = `black`;\r\n    }\r\n\r\n    if (width === 'wide')\r\n    {\r\n        widthButton = `50%`;\r\n    }\r\n    else\r\n    {\r\n        widthButton = `25%`;\r\n    }\r\n\r\n    const Button = styled.button`\r\n    background-color: ${backgroundColour};\r\n    padding: 0px;\r\n    height: 100%;\r\n    width: ${widthButton};\r\n    border: 1px solid rgb(133, 134, 148, .45);\r\n    color: ${textColour};\r\n    font-family: 'Sans Sans', sans-serif;\r\n    font-size: 4vw;\r\n    @media (max-width: 420px) {\r\n        font-size: 8vw;\r\n    }\r\n    font-weight: normal;\r\n    padding: 0px;\r\n    margin: 0px;\r\n    `;\r\n\r\n    const Calculate = (operation, number1, number2) =>\r\n    {\r\n        let result = 0; \r\n\r\n        switch(operation)\r\n        {\r\n            case '+':\r\n                result = number1 + number2;\r\n                break;\r\n            case '-':\r\n                result = number1 - number2;\r\n                break;\r\n            case 'รท':\r\n                result = number1 / number2; \r\n                break;\r\n            case '%':\r\n                result = number1 % number2;\r\n                break;\r\n            case 'ร':\r\n                result = number1 * number2;\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    }\r\n    \r\n    const buttonClicked = () =>\r\n    {\r\n        const buttonPressed = {value}.value;\r\n        console.log(\"[buttonClicked]: \" + buttonPressed);\r\n        console.log(\"[buttonClicked start] displayValue: >\" + displayValue + \"<\");\r\n        // displayValue = {op}(buttonPressed)\r\n        \r\n        // if the value is a NUMBER\r\n        if (Number.isInteger(parseInt(buttonPressed)) == true || buttonPressed === '.' || buttonPressed == '+/-')\r\n        {   \r\n            // 1. \" \" is found anywhere in the \"displayValue\" OR (start of calculator)\r\n            // 2. \" \" is not found anywhere in the \"displayValue\" AND \"previous\" has a value AND \"operation\" doesn't have a value (reseting, start new calculation)\r\n            // THEN just replace \"displayValue\" with a number\r\n\r\n            if ((String(displayValue).indexOf(\" \") !== -1) || \r\n                (String(displayValue).indexOf(\" \") === -1 && previous !== \"\" && operation === \"\"))\r\n            {\r\n                console.log(\"[buttonClicked 1] displayValue: >\" + displayValue + \"<\");\r\n                displayValue = buttonPressed;\r\n                console.log(\"[buttonClicked 2] displayValue: >\" + displayValue + \"<\");\r\n            }\r\n            else if (next === \"\" || \r\n                    !(operation !== \"\" && next === \"\" && previous !== \"\"))\r\n            {\r\n                console.log(\"[buttonClicked 3] displayValue: \" + displayValue);\r\n\r\n                if (Number.isInteger(parseInt(displayValue)) == false)\r\n                {\r\n                    displayValue = \"\";   \r\n                }\r\n\r\n                displayValue += buttonPressed;\r\n                console.log(\"[buttonClicked 4] displayValue: \" + displayValue);\r\n\r\n            }\r\n\r\n            // to exclude multiplication: displayValue === operation && next !== \"\" && previous !== \"\"\r\n            // to reset state after calculation: displayValue !=== \"\" && previous === \"\" && operation === \"\" && next === \"\"\r\n\r\n            if (buttonPressed !== '.' && buttonPressed !== '0' && operation === \"\")\r\n            {\r\n                displayValue = '' + parseFloat(displayValue);\r\n            }\r\n\r\n            if (buttonPressed === '+/-')\r\n            {\r\n                console.log(\"[buttonClicked 3] displayValue: \" + displayValue);\r\n                displayValue = displayValue - 2 * displayValue;\r\n                console.log(\"[buttonClicked 4] displayValue: \" + displayValue);\r\n            }\r\n\r\n            // console.log(\"display value: \" + displayValue);\r\n        }\r\n        setDisplayValue(displayValue);\r\n\r\n        if (buttonPressed === '+' || \r\n            buttonPressed === '-' || \r\n            buttonPressed === 'รท' ||\r\n            buttonPressed === '%' ||\r\n            buttonPressed === 'ร')\r\n        {\r\n            setOperation(buttonPressed);\r\n\r\n            if (Number.isInteger(parseInt(displayValue)) == true)\r\n            {\r\n                setPrevious(displayValue);\r\n            }\r\n\r\n            displayValue = buttonPressed\r\n\r\n            setDisplayValue(buttonPressed);\r\n        }\r\n\r\n        if (previous !== \"\")\r\n        {\r\n            setNext(displayValue);\r\n        }\r\n\r\n        if (operation !== \"\" && buttonPressed === \"=\")\r\n        {\r\n            let result = Calculate(operation, parseFloat(previous), parseFloat(next));\r\n\r\n            setOperation(\"\");\r\n            setPrevious(\"\");\r\n            setNext(\"\");\r\n            setDisplayValue(' ' + result);\r\n        }\r\n\r\n        if (buttonPressed == \"AC\")\r\n        {\r\n            setDisplayValue(\" 0\");\r\n            setOperation(\"\");\r\n            setPrevious(\"\");\r\n            setNext(\"\");\r\n        }\r\n        \r\n        console.log(\"[buttonClicked: \" + buttonPressed +  \"] displayValue: \" + displayValue);\r\n    }\r\n\r\n    return ( \r\n        <Button onClick = {buttonClicked}> {value} </Button>\r\n     );\r\n}\r\n \r\nexport default Button;","import React, { useState } from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Button from './Button';\r\n\r\nconst Buttons = ({setDisplayValue, displayValue, setOperation, operation, setPrevious, previous, setNext, next}) => {\r\n\r\n    const Container = styled.div`\r\n    `\r\n\r\n    const Div = styled.div`\r\n    height: 17vh;\r\n    `\r\n \r\n    return ( \r\n        <Container> \r\n            <Div>\r\n                <Button value = 'AC' \r\n                    setDisplayValue = {setDisplayValue}\r\n                    displayValue = {displayValue}\r\n                    setOperation = {setOperation}\r\n                    operation = {operation}\r\n                    previous = {previous}\r\n                    setPrevious = {setPrevious}\r\n                    next = {next}\r\n                    setNext = {setNext}\r\n                />\r\n\r\n                <Button value = '+/-' \r\n                    setDisplayValue = {setDisplayValue}\r\n                    displayValue = {displayValue}\r\n                    setOperation = {setOperation}\r\n                    operation = {operation}\r\n                    previous = {previous}\r\n                    setPrevious = {setPrevious}\r\n                    next = {next}\r\n                    setNext = {setNext}\r\n                />\r\n\r\n                <Button value = '%' \r\n                setDisplayValue = {setDisplayValue}\r\n                displayValue = {displayValue}\r\n                setOperation = {setOperation}\r\n                operation = {operation}\r\n                previous = {previous}\r\n                setPrevious = {setPrevious}\r\n                next = {next}\r\n                setNext = {setNext}\r\n                />\r\n\r\n                <Button value = 'รท' \r\n                setDisplayValue = {setDisplayValue}\r\n                displayValue = {displayValue}\r\n                setOperation = {setOperation}\r\n                operation = {operation}\r\n                previous = {previous}\r\n                setPrevious = {setPrevious}\r\n                next = {next}\r\n                setNext = {setNext}\r\n                />\r\n\r\n            </Div>\r\n\r\n            <Div>\r\n                <Button value = '7' \r\n                setDisplayValue = {setDisplayValue}\r\n                displayValue = {displayValue}\r\n                setOperation = {setOperation}\r\n                operation = {operation}\r\n                previous = {previous}\r\n                setPrevious = {setPrevious}\r\n                next = {next}\r\n                setNext = {setNext}\r\n                />\r\n\r\n                <Button value = '8' \r\n                setDisplayValue = {setDisplayValue}\r\n                displayValue = {displayValue}\r\n                setOperation = {setOperation}\r\n                operation = {operation}\r\n                previous = {previous}\r\n                setPrevious = {setPrevious}\r\n                next = {next}\r\n                setNext = {setNext}\r\n                />\r\n\r\n                <Button value = '9' \r\n                setDisplayValue = {setDisplayValue}\r\n                displayValue = {displayValue}\r\n                setOperation = {setOperation}\r\n                operation = {operation}\r\n                previous = {previous}\r\n                setPrevious = {setPrevious}\r\n                next = {next}\r\n                setNext = {setNext}\r\n                />\r\n\r\n                <Button value = 'ร' \r\n                setDisplayValue = {setDisplayValue}\r\n                displayValue = {displayValue}\r\n                setOperation = {setOperation}\r\n                operation = {operation}\r\n                previous = {previous}\r\n                setPrevious = {setPrevious}\r\n                next = {next}\r\n                setNext = {setNext}\r\n                />\r\n\r\n            </Div>\r\n\r\n            <Div>\r\n                <Button value = '4' \r\n                setDisplayValue = {setDisplayValue}\r\n                displayValue = {displayValue}\r\n                setOperation = {setOperation}\r\n                operation = {operation}\r\n                previous = {previous}\r\n                setPrevious = {setPrevious}\r\n                next = {next}\r\n                setNext = {setNext}\r\n                />\r\n\r\n                <Button value = '5' \r\n                setDisplayValue = {setDisplayValue}\r\n                displayValue = {displayValue}\r\n                setOperation = {setOperation}\r\n                operation = {operation}\r\n                previous = {previous}\r\n                setPrevious = {setPrevious}\r\n                next = {next}\r\n                setNext = {setNext}\r\n                />\r\n\r\n                <Button value = '6' \r\n                setDisplayValue = {setDisplayValue}\r\n                displayValue = {displayValue}\r\n                setOperation = {setOperation}\r\n                operation = {operation}\r\n                previous = {previous}\r\n                setPrevious = {setPrevious}\r\n                next = {next}\r\n                setNext = {setNext}\r\n                />\r\n\r\n                <Button value = '-' \r\n                setDisplayValue = {setDisplayValue}\r\n                displayValue = {displayValue}\r\n                setOperation = {setOperation}\r\n                operation = {operation}\r\n                previous = {previous}\r\n                setPrevious = {setPrevious}\r\n                next = {next}\r\n                setNext = {setNext}\r\n                />\r\n\r\n            </Div>\r\n            \r\n            <Div>\r\n                <Button value = '1' \r\n                setDisplayValue = {setDisplayValue}\r\n                displayValue = {displayValue}\r\n                setOperation = {setOperation}\r\n                operation = {operation}\r\n                previous = {previous}\r\n                setPrevious = {setPrevious}\r\n                next = {next}\r\n                setNext = {setNext}\r\n                />\r\n\r\n                <Button value = '2' \r\n                setDisplayValue = {setDisplayValue}\r\n                displayValue = {displayValue}\r\n                setOperation = {setOperation}\r\n                operation = {operation}\r\n                previous = {previous}\r\n                setPrevious = {setPrevious}\r\n                next = {next}\r\n                setNext = {setNext}\r\n                />\r\n\r\n                <Button value = '3' \r\n                setDisplayValue = {setDisplayValue}\r\n                displayValue = {displayValue}\r\n                setOperation = {setOperation}\r\n                operation = {operation}\r\n                previous = {previous}\r\n                setPrevious = {setPrevious}\r\n                next = {next}\r\n                setNext = {setNext}\r\n                />\r\n\r\n                <Button value = '+' \r\n                setDisplayValue = {setDisplayValue}\r\n                displayValue = {displayValue}\r\n                setOperation = {setOperation}\r\n                operation = {operation}\r\n                previous = {previous}\r\n                setPrevious = {setPrevious}\r\n                next = {next}\r\n                setNext = {setNext}\r\n                />\r\n\r\n            </Div>\r\n\r\n            <Div>\r\n                <Button value = '0' width = 'wide' \r\n                setDisplayValue = {setDisplayValue}\r\n                displayValue = {displayValue}\r\n                setOperation = {setOperation}\r\n                operation = {operation}\r\n                previous = {previous}\r\n      setPrevious = {setPrevious}\r\n      next = {next}\r\n      setNext = {setNext}\r\n                />\r\n\r\n                <Button value = '.' \r\n                setDisplayValue = {setDisplayValue}\r\n                displayValue = {displayValue}\r\n                setOperation = {setOperation}\r\n                operation = {operation}\r\n                previous = {previous}\r\n      setPrevious = {setPrevious}\r\n      next = {next}\r\n      setNext = {setNext}\r\n                />\r\n\r\n                <Button value = '=' \r\n                setDisplayValue = {setDisplayValue}\r\n                displayValue = {displayValue}\r\n                setOperation = {setOperation}\r\n                operation = {operation}\r\n                previous = {previous}\r\n      setPrevious = {setPrevious}\r\n      next = {next}\r\n      setNext = {setNext}\r\n                />\r\n\r\n            </Div>\r\n\r\n        </Container>\r\n     );\r\n}\r\n \r\nexport default Buttons;","import React from 'react';\nimport {useState} from 'react';\n\nimport Calculator from './Components/Calculator/component';\nimport Display from './Components/Calculator/Display';\nimport Buttons from './Components/Calculator/Buttons';\n\nimport './App.css';\nimport './Components/Calculator/component';\n\nfunction App() \n{\n  const [displayValue, setDisplayValue] = useState(\" 0\");\n  const [operation, setOperation] = useState(\"\");\n  const [previous, setPrevious] = useState(\"\");\n  const [next, setNext] = useState(\"\");\n\n  console.log(\"display value: \" + displayValue);\n  console.log(\"previous value: \" + previous);\n  console.log(\"operation: \" + operation);\n  console.log(\"next value: \" + next);\n\n  return (\n    <div className=\"App\">\n      <Display displayValue = {displayValue}/>\n\n      <Buttons \n        setDisplayValue = {setDisplayValue} \n        displayValue = {displayValue} \n        setOperation = {setOperation} \n        operation = {operation}\n        previous = {previous}\n        setPrevious = {setPrevious}\n        next = {next}\n        setNext = {setNext}\n      />\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}